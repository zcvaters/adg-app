---
import { Image } from 'astro:assets';
---
<nav class="w-full bg-white shadow-lg sticky top-0 z-[1000] border-b border-primary-200" role="navigation">
    <div class="max-w-7xl mx-auto p-4 flex justify-between items-center md:flex-row flex-col md:gap-0 gap-4">
        <div class="nav-logo flex items-center gap-4 min-h-[65px]">
            <a href="/" class="block h-[65px] w-[90px] hover:opacity-90 transition-opacity focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" aria-label="Home">
                <Image 
                    src="/adg-logo.jpg" 
                    alt="ADG Logo" 
                    width={90} 
                    height={65}
                    class="h-full w-full object-contain" 
                    loading="eager"
                    decoding="sync"
                />
            </a>
        </div>
        <ul class="flex items-center md:gap-8 gap-4 flex-wrap justify-center list-none m-0 p-0" role="menubar">
            <li role="none"><a href="/" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem">Home</a></li>
            <li class="relative group" role="none">
                <button 
                    class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 flex items-center gap-1 cursor-pointer bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500"
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-controls="events-dropdown"
                    id="events-menu"
                    role="menuitem"
                >
                    Events
                    <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                <div 
                    id="events-dropdown"
                    class="absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50"
                    role="menu"
                    aria-orientation="vertical"
                    aria-labelledby="events-menu"
                >
                    <a href="/events" class="block px-4 py-2 text-primary-600 hover:bg-primary-50 hover:text-primary-800 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem" tabindex="-1" aria-label="Schedule">Schedule</a>
                    <a href="/gallery" class="block px-4 py-2 text-primary-600 hover:bg-primary-50 hover:text-primary-800 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem" tabindex="-1" aria-label="Photos">Photos</a>
                </div>
            </li>
            <li role="none"><a href="/courses" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem">Courses</a></li>
            <li role="none"><a href="/contact" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem">Contact</a></li>
            <li role="none"><a href="/board" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem">Board</a></li>
            <li role="none"><a href="/join" class="bg-primary-600 text-white font-medium hover:bg-primary-700 transition-colors px-4 py-2 rounded-md focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500" role="menuitem">Join ADG</a></li>
        </ul>
    </div>
</nav>

<script>
    const eventsButton = document.getElementById('events-menu');
    const dropdown = document.getElementById('events-dropdown');
    const dropdownItems = dropdown?.querySelectorAll('[role="menuitem"]') || [];
    let isOpen = false;

    const toggleDropdown = (force?: boolean) => {
        isOpen = force !== undefined ? force : !isOpen;
        dropdown?.classList.toggle('hidden', !isOpen);
        eventsButton?.setAttribute('aria-expanded', isOpen.toString());
    };

    // Handle button clicks
    eventsButton?.addEventListener('click', (e) => {
        e.stopPropagation();
        toggleDropdown();
    });

    // Handle keyboard navigation
    eventsButton?.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            toggleDropdown(true);
        }
    });

    // Keyboard navigation within dropdown
    dropdown?.addEventListener('keydown', (e) => {
        const currentIndex = Array.from(dropdownItems).indexOf(document.activeElement as Element);
        
        switch (e.key) {
            case 'Escape':
                e.preventDefault();
                toggleDropdown(false);
                eventsButton?.focus();
                break;
            case 'ArrowDown':
                e.preventDefault();
                if (currentIndex < dropdownItems.length - 1) {
                    (dropdownItems[currentIndex + 1] as HTMLElement).focus();
                }
                break;
            case 'ArrowUp':
                e.preventDefault();
                if (currentIndex > 0) {
                    (dropdownItems[currentIndex - 1] as HTMLElement).focus();
                } else {
                    eventsButton?.focus();
                    toggleDropdown(false);
                }
                break;
            case 'Tab':
                if (!e.shiftKey && currentIndex === dropdownItems.length - 1) {
                    toggleDropdown(false);
                }
                if (e.shiftKey && currentIndex === 0) {
                    toggleDropdown(false);
                }
                break;
        }
    });

    // Handle focus trap
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Tab' && isOpen) {
            const focusableElements = [eventsButton, ...Array.from(dropdownItems)] as HTMLElement[];
            const firstFocusable = focusableElements[0];
            const lastFocusable = focusableElements[focusableElements.length - 1];

            if (e.shiftKey && document.activeElement === firstFocusable) {
                e.preventDefault();
                lastFocusable?.focus();
            } else if (!e.shiftKey && document.activeElement === lastFocusable) {
                e.preventDefault();
                firstFocusable?.focus();
            }
        }
    });
</script>
