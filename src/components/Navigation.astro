---
import { Image } from 'astro:assets';
---
<nav class="w-full bg-white shadow-lg sticky top-0 z-[1000] border-b border-primary-200">
    <div class="max-w-7xl mx-auto p-4 flex justify-between items-center md:flex-row flex-col md:gap-0 gap-4">
        <div class="nav-logo flex items-center gap-4 min-h-[65px]">
            <a href="/" class="block h-[65px] w-[90px] hover:opacity-90 transition-opacity" aria-label="Home">
                <Image 
                    src="/adg-logo.jpg" 
                    alt="ADG Logo" 
                    width={90} 
                    height={65}
                    class="h-full w-full object-contain" 
                    loading="eager"
                    decoding="sync"
                />
            </a>
        </div>
        <ul class="flex items-center md:gap-8 gap-4 flex-wrap justify-center list-none m-0 p-0">
            <li><a href="/" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50">Home</a></li>
            <li class="relative group">
                <button 
                    class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50 flex items-center gap-1 cursor-pointer bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-opacity-50"
                    aria-expanded="false"
                    aria-haspopup="true"
                    id="events-menu"
                >
                    Events
                    <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                <div 
                    class="absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50"
                    role="menu"
                    aria-orientation="vertical"
                    aria-labelledby="events-menu"
                >
                    <a href="/events" class="block px-4 py-2 text-primary-600 hover:bg-primary-50 hover:text-primary-800 focus:outline-none focus-visible:bg-primary-50" role="menuitem">Schedule</a>
                    <a href="/gallery" class="block px-4 py-2 text-primary-600 hover:bg-primary-50 hover:text-primary-800 focus:outline-none focus-visible:bg-primary-50" role="menuitem">Photos</a>
                </div>
            </li>
            <li><a href="/courses" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50">Courses</a></li>
            <li><a href="/contact" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50">Contact</a></li>
            <li><a href="/board" class="text-primary-600 font-medium hover:text-primary-800 transition-colors px-3 py-2 rounded-md hover:bg-primary-50">Board</a></li>
            <li><a href="/join" class="bg-primary-600 text-white font-medium hover:bg-primary-700 transition-colors px-4 py-2 rounded-md">Join ADG</a></li>
        </ul>
    </div>
</nav>

<script>
    // Handle mobile dropdown
    const eventsButton = document.getElementById('events-menu');
    const dropdown = eventsButton?.nextElementSibling;
    let isOpen = false;

    eventsButton?.addEventListener('click', (e) => {
        e.preventDefault();
        isOpen = !isOpen;
        eventsButton.setAttribute('aria-expanded', isOpen.toString());
        if (isOpen) {
            dropdown?.classList.remove('invisible', 'opacity-0');
            dropdown?.classList.add('visible', 'opacity-100');
            eventsButton.querySelector('svg')?.classList.add('rotate-180');
        } else {
            dropdown?.classList.remove('visible', 'opacity-100');
            dropdown?.classList.add('invisible', 'opacity-0');
            eventsButton.querySelector('svg')?.classList.remove('rotate-180');
        }
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
        if (!eventsButton?.contains(e.target as Node) && !dropdown?.contains(e.target as Node)) {
            isOpen = false;
            eventsButton?.setAttribute('aria-expanded', 'false');
            dropdown?.classList.remove('visible', 'opacity-100');
            dropdown?.classList.add('invisible', 'opacity-0');
            eventsButton?.querySelector('svg')?.classList.remove('rotate-180');
        }
    });
</script>
